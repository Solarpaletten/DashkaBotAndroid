#!/bin/bash

# DashkaBot Node.js Launch Script
echo "üöÄ DashkaBot - –°–∏—Å—Ç–µ–º–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–≤–æ–¥–∞ (Node.js)"
echo "====================================================="
echo "‚è∞ –ó–∞–ø—É—Å–∫: $(date)"
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Node.js
if ! command -v node &> /dev/null; then
    echo -e "${RED}‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 16+${NC}"
    exit 1
fi

NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
if [ "$NODE_VERSION" -lt 16 ]; then
    echo -e "${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 16+, –Ω–∞–π–¥–µ–Ω $(node -v)${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Node.js: $(node -v)${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ npm
if ! command -v npm &> /dev/null; then
    echo -e "${RED}‚ùå npm –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    exit 1
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f ".env" ]; then
    echo -e "${BLUE}üîß –ó–∞–≥—Ä—É–∑–∫–∞ .env —Ñ–∞–π–ª–∞...${NC}"
    export $(cat .env | grep -v '^#' | xargs)
    
    if [ -n "$OPENAI_API_KEY" ]; then
        echo -e "${GREEN}‚úÖ OpenAI API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω: ${OPENAI_API_KEY:0:10}...${OPENAI_API_KEY: -4}${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è OpenAI API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤
REQUIRED_FILES=("UnifiedTranslationService.js" "whisperService.js" "textToSpeechService.js")
MISSING_FILES=()

for file in "${REQUIRED_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        MISSING_FILES+=("$file")
    fi
done

if [ ${#MISSING_FILES[@]} -gt 0 ]; then
    echo -e "${RED}‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:${NC}"
    for file in "${MISSING_FILES[@]}"; do
        echo "   - $file"
    done
    echo ""
    echo -e "${YELLOW}üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã –Ω–∞–π–¥–µ–Ω—ã${NC}"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
if [ ! -d "node_modules" ] || [ ! -f "package.json" ]; then
    echo -e "${BLUE}üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    
    # –°–æ–∑–¥–∞–µ–º package.json –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if [ ! -f "package.json" ]; then
        echo -e "${YELLOW}üìù –°–æ–∑–¥–∞–Ω–∏–µ package.json...${NC}"
        cat > package.json << 'EOF'
{
  "name": "dashkabot-ai-server",
  "version": "3.0.0",
  "description": "DashkaBot AI Translation Server",
  "main": "ai_server_node.js",
  "scripts": {
    "start": "node ai_server_node.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "multer": "^1.4.5-lts.1",
    "openai": "^4.20.1"
  }
}
EOF
    fi
    
    npm install
    
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π${NC}"
        exit 1
    fi
    
    echo -e "${GREEN}‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo -e "${BLUE}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...${NC}"
pkill -f "node.*ai_server" 2>/dev/null || true
pkill -f "python.*ai_server" 2>/dev/null || true

# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
PORTS=(8080 8765 8090)
for port in "${PORTS[@]}"; do
    PID=$(lsof -ti:$port 2>/dev/null)
    if [ ! -z "$PID" ]; then
        echo -e "${YELLOW}üîì –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ $port (PID: $PID)${NC}"
        kill $PID 2>/dev/null || true
        sleep 1
    fi
done

# –°–æ–∑–¥–∞–Ω–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo -e "${BLUE}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...${NC}"
mkdir -p temp audio_output logs

# –ó–∞–ø—É—Å–∫ AI Server (Node.js)
echo ""
echo -e "${GREEN}ü§ñ –ó–∞–ø—É—Å–∫ AI Server (Node.js) –Ω–∞ –ø–æ—Ä—Ç—É 8080...${NC}"

if [ ! -f "ai_server_node.js" ]; then
    echo -e "${RED}‚ùå –§–∞–π–ª ai_server_node.js –Ω–µ –Ω–∞–π–¥–µ–Ω!${NC}"
    echo -e "${YELLOW}üí° –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ –≤ —á–∞—Ç–µ${NC}"
    exit 1
fi

# –ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
node ai_server_node.js > logs/ai_server.log 2>&1 &
AI_SERVER_PID=$!
echo $AI_SERVER_PID > .ai_server.pid

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ AI Server
sleep 3
if kill -0 $AI_SERVER_PID 2>/dev/null; then
    echo -e "${GREEN}‚úÖ AI Server –∑–∞–ø—É—â–µ–Ω (PID: $AI_SERVER_PID)${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ AI Server${NC}"
    echo "–õ–æ–≥–∏:"
    tail -10 logs/ai_server.log
    exit 1
fi

# –ó–∞–ø—É—Å–∫ WebSocket Server
echo -e "${GREEN}üîå –ó–∞–ø—É—Å–∫ WebSocket Server –Ω–∞ –ø–æ—Ä—Ç—É 8765...${NC}"

if [ -f "websocket_server.py" ]; then
    python3 websocket_server.py > logs/websocket.log 2>&1 &
    WS_SERVER_PID=$!
    echo $WS_SERVER_PID > .ws_server.pid
    
    sleep 2
    if kill -0 $WS_SERVER_PID 2>/dev/null; then
        echo -e "${GREEN}‚úÖ WebSocket Server –∑–∞–ø—É—â–µ–Ω (PID: $WS_SERVER_PID)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è WebSocket Server –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è websocket_server.py –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º${NC}"
fi

# –ó–∞–ø—É—Å–∫ Web Server
echo -e "${GREEN}üåê –ó–∞–ø—É—Å–∫ Web Server –Ω–∞ –ø–æ—Ä—Ç—É 8090...${NC}"

if [ -f "web_server.py" ]; then
    python3 web_server.py > logs/web_server.log 2>&1 &
    WEB_SERVER_PID=$!
    echo $WEB_SERVER_PID > .web_server.pid
    
    sleep 2
    if kill -0 $WEB_SERVER_PID 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Web Server –∑–∞–ø—É—â–µ–Ω (PID: $WEB_SERVER_PID)${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è Web Server –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è${NC}"
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è web_server.py –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º${NC}"
fi

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–æ–≤...${NC}"
sleep 3

# –ü—Ä–æ–≤–µ—Ä–∫–∞ AI Server
if curl -s http://localhost:8080/health > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ AI Server –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ http://localhost:8080${NC}"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    STATS=$(curl -s http://localhost:8080/stats 2>/dev/null)
    if [ ! -z "$STATS" ]; then
        echo -e "${BLUE}üìä –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏: $(echo $STATS | grep -o '"supported_languages":\[[^]]*\]' | grep -o '"[^"]*"' | wc -l)${NC}"
    fi
else
    echo -e "${RED}‚ùå AI Server –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç${NC}"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Web Server
if curl -s http://localhost:8090 > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Web Interface –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:8090${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è Web Interface –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

echo ""
echo -e "${GREEN}üéâ DashkaBot –∑–∞–ø—É—â–µ–Ω!${NC}"
echo -e "${BLUE}üîó –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:${NC}"
echo "   üåê Web Interface: http://localhost:8090"
echo "   ü§ñ AI Server API: http://localhost:8080"
echo "   üîå WebSocket: ws://localhost:8765"
echo ""
echo -e "${BLUE}üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pkill -f dashkabot"
echo "   –õ–æ–≥–∏ AI: tail -f logs/ai_server.log"
echo "   –°—Ç–∞—Ç—É—Å: curl http://localhost:8080/health"
echo ""
echo -e "${YELLOW}üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C${NC}"

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
cleanup() {
    echo ""
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    [ -f .ai_server.pid ] && kill $(cat .ai_server.pid) 2>/dev/null && rm .ai_server.pid
    [ -f .ws_server.pid ] && kill $(cat .ws_server.pid) 2>/dev/null && rm .ws_server.pid  
    [ -f .web_server.pid ] && kill $(cat .web_server.pid) 2>/dev/null && rm .web_server.pid
    
    echo -e "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    exit 0
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
trap cleanup SIGINT SIGTERM

# –û–∂–∏–¥–∞–Ω–∏–µ
echo -e "${BLUE}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ... (Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏)${NC}"
while true; do
    sleep 5
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å—ã –µ—â–µ –∂–∏–≤—ã
    if [ -f .ai_server.pid ] && ! kill -0 $(cat .ai_server.pid) 2>/dev/null; then
        echo -e "${RED}‚ùå AI Server –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ${NC}"
        tail -10 logs/ai_server.log
        break
    fi
    
done